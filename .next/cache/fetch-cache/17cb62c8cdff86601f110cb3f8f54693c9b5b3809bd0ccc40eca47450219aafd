{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sun, 11 May 2025 18:11:35 GMT","server":"scaffolding on HTTPServer2","server-timing":"gfet4t7; dur=8928","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"","status":200,"url":"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-001:generateContent"},"revalidate":31536000,"tags":[]}